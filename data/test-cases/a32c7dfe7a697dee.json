{"uid":"a32c7dfe7a697dee","name":"Shows Added Amount in Operation List (Constant)","fullName":"TESTS.test_outcome_page.TestOutcomePage#test_check_operation_list_constant_outcome","historyId":"576911abd80a5270dd6cefe6cafafbbb","time":{"start":1700003420491,"stop":1700003433789,"duration":13298},"description":"\n    Attempt to add random amount to exist category in Constant Outcome list.\n    After user click \"Add\" button on the page, amount shows adds to category.\n    Operation shows in the bottom page section in Operation List.\n\n    Precondition:\n    - User uses valid login and password\n    - One o more category exist in the list\n    - Positive amount\n\n    Expected Result:\n    - Amount added to existing category in Constant Outcome list.\n    - Added amount shows in Operation list.\n    ","descriptionHtml":"<pre><code>Attempt to add random amount to exist category in Constant Outcome list.\nAfter user click &quot;Add&quot; button on the page, amount shows adds to category.\nOperation shows in the bottom page section in Operation List.\n\nPrecondition:\n- User uses valid login and password\n- One o more category exist in the list\n- Positive amount\n\nExpected Result:\n- Amount added to existing category in Constant Outcome list.\n- Added amount shows in Operation list.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5641af440fb3 <unknown>\n#1 0x5641af1144a7 <unknown>\n#2 0x5641af119509 <unknown>\n#3 0x5641af11b40a <unknown>\n#4 0x5641af1976ef <unknown>\n#5 0x5641af17d942 <unknown>\n#6 0x5641af196c02 <unknown>\n#7 0x5641af17d713 <unknown>\n#8 0x5641af15018b <unknown>\n#9 0x5641af150f7e <unknown>\n#10 0x5641af4068d8 <unknown>\n#11 0x5641af40a800 <unknown>\n#12 0x5641af414cfc <unknown>\n#13 0x5641af40b418 <unknown>\n#14 0x5641af3d842f <unknown>\n#15 0x5641af42f4e8 <unknown>\n#16 0x5641af42f6b4 <unknown>\n#17 0x5641af440143 <unknown>\n#18 0x7f6628494ac3 <unknown>","statusTrace":"self = <TESTS.test_outcome_page.TestOutcomePage object at 0x7f0e5f310cd0>\nstart_page = <PAGES.StartPage.StartPage object at 0x7f0e5f2c34c0>\noutcome_page = <function outcome_page.<locals>.create_outcome_page at 0x7f0e5f1545e0>\nvalue = 0.1\n\n    @allure.title(\"Shows Added Amount in Operation List (Constant)\")\n    @allure.feature(\"Operation list\")\n    @allure.description(\"\"\"\n    Attempt to add random amount to exist category in Constant Outcome list.\n    After user click \"Add\" button on the page, amount shows adds to category.\n    Operation shows in the bottom page section in Operation List.\n    \n    Precondition:\n    - User uses valid login and password\n    - One o more category exist in the list\n    - Positive amount\n    \n    Expected Result:\n    - Amount added to existing category in Constant Outcome list.\n    - Added amount shows in Operation list.\n    \"\"\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.operation_list\n    @pytest.mark.parametrize(\"value\", params_amount_values)\n    def test_check_operation_list_constant_outcome(self, start_page, outcome_page, value):\n        # Precondition:\n        outcome_const = outcome_page(list_name=\"Постоянные\", list_locator=CategoriesLocators.constant_dropdown)\n        outcome_const.add_category(randomize_latin_string(10))\n        # Test:\n        outcome_const = outcome_page(list_name=\"Постоянные\", list_locator=CategoriesLocators.constant_dropdown,\n                                     add_amount_field=CategoriesLocators.add_amount_to_category_field_const,\n                                     add_amount_btn=CategoriesLocators.add_amount_to_category_btn_const\n                                     )\n>       outcome_const.operation_add_amount(value)\n\nTESTS/test_outcome_page.py:481: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPAGES/PagesMain.py:142: in operation_add_amount\n    item_index = random.choice(self.get_elements_from_list(values_locator=CategoriesLocators.list_elements,\nPAGES/Main.py:70: in get_elements_from_list\n    list_of_indexes.append(item.get_attribute(attribute))\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:177: in get_attribute\n    attribute_value = self.parent.execute_script(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0e5f2826b0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x5641af42f6b4 \\\\u003Cunknown>\\\\n#17 0x5641af440143 \\\\u003Cunknown>\\\\n#18 0x7f6628494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5641af440fb3 <unknown>\nE       #1 0x5641af1144a7 <unknown>\nE       #2 0x5641af119509 <unknown>\nE       #3 0x5641af11b40a <unknown>\nE       #4 0x5641af1976ef <unknown>\nE       #5 0x5641af17d942 <unknown>\nE       #6 0x5641af196c02 <unknown>\nE       #7 0x5641af17d713 <unknown>\nE       #8 0x5641af15018b <unknown>\nE       #9 0x5641af150f7e <unknown>\nE       #10 0x5641af4068d8 <unknown>\nE       #11 0x5641af40a800 <unknown>\nE       #12 0x5641af414cfc <unknown>\nE       #13 0x5641af40b418 <unknown>\nE       #14 0x5641af3d842f <unknown>\nE       #15 0x5641af42f4e8 <unknown>\nE       #16 0x5641af42f6b4 <unknown>\nE       #17 0x5641af440143 <unknown>\nE       #18 0x7f6628494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1700003419716,"stop":1700003420490,"duration":774},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"start_page","time":{"start":1700003420490,"stop":1700003420491,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"outcome_page","time":{"start":1700003420491,"stop":1700003420491,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Attempt to add random amount to exist category in Constant Outcome list.\n    After user click \"Add\" button on the page, amount shows adds to category.\n    Operation shows in the bottom page section in Operation List.\n\n    Precondition:\n    - User uses valid login and password\n    - One o more category exist in the list\n    - Positive amount\n\n    Expected Result:\n    - Amount added to existing category in Constant Outcome list.\n    - Added amount shows in Operation list.\n    ","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5641af440fb3 <unknown>\n#1 0x5641af1144a7 <unknown>\n#2 0x5641af119509 <unknown>\n#3 0x5641af11b40a <unknown>\n#4 0x5641af1976ef <unknown>\n#5 0x5641af17d942 <unknown>\n#6 0x5641af196c02 <unknown>\n#7 0x5641af17d713 <unknown>\n#8 0x5641af15018b <unknown>\n#9 0x5641af150f7e <unknown>\n#10 0x5641af4068d8 <unknown>\n#11 0x5641af40a800 <unknown>\n#12 0x5641af414cfc <unknown>\n#13 0x5641af40b418 <unknown>\n#14 0x5641af3d842f <unknown>\n#15 0x5641af42f4e8 <unknown>\n#16 0x5641af42f6b4 <unknown>\n#17 0x5641af440143 <unknown>\n#18 0x7f6628494ac3 <unknown>","statusTrace":"self = <TESTS.test_outcome_page.TestOutcomePage object at 0x7f0e5f310cd0>\nstart_page = <PAGES.StartPage.StartPage object at 0x7f0e5f2c34c0>\noutcome_page = <function outcome_page.<locals>.create_outcome_page at 0x7f0e5f1545e0>\nvalue = 0.1\n\n    @allure.title(\"Shows Added Amount in Operation List (Constant)\")\n    @allure.feature(\"Operation list\")\n    @allure.description(\"\"\"\n    Attempt to add random amount to exist category in Constant Outcome list.\n    After user click \"Add\" button on the page, amount shows adds to category.\n    Operation shows in the bottom page section in Operation List.\n    \n    Precondition:\n    - User uses valid login and password\n    - One o more category exist in the list\n    - Positive amount\n    \n    Expected Result:\n    - Amount added to existing category in Constant Outcome list.\n    - Added amount shows in Operation list.\n    \"\"\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.operation_list\n    @pytest.mark.parametrize(\"value\", params_amount_values)\n    def test_check_operation_list_constant_outcome(self, start_page, outcome_page, value):\n        # Precondition:\n        outcome_const = outcome_page(list_name=\"Постоянные\", list_locator=CategoriesLocators.constant_dropdown)\n        outcome_const.add_category(randomize_latin_string(10))\n        # Test:\n        outcome_const = outcome_page(list_name=\"Постоянные\", list_locator=CategoriesLocators.constant_dropdown,\n                                     add_amount_field=CategoriesLocators.add_amount_to_category_field_const,\n                                     add_amount_btn=CategoriesLocators.add_amount_to_category_btn_const\n                                     )\n>       outcome_const.operation_add_amount(value)\n\nTESTS/test_outcome_page.py:481: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPAGES/PagesMain.py:142: in operation_add_amount\n    item_index = random.choice(self.get_elements_from_list(values_locator=CategoriesLocators.list_elements,\nPAGES/Main.py:70: in get_elements_from_list\n    list_of_indexes.append(item.get_attribute(attribute))\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:177: in get_attribute\n    attribute_value = self.parent.execute_script(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:407: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0e5f2826b0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x5641af42f6b4 \\\\u003Cunknown>\\\\n#17 0x5641af440143 \\\\u003Cunknown>\\\\n#18 0x7f6628494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5641af440fb3 <unknown>\nE       #1 0x5641af1144a7 <unknown>\nE       #2 0x5641af119509 <unknown>\nE       #3 0x5641af11b40a <unknown>\nE       #4 0x5641af1976ef <unknown>\nE       #5 0x5641af17d942 <unknown>\nE       #6 0x5641af196c02 <unknown>\nE       #7 0x5641af17d713 <unknown>\nE       #8 0x5641af15018b <unknown>\nE       #9 0x5641af150f7e <unknown>\nE       #10 0x5641af4068d8 <unknown>\nE       #11 0x5641af40a800 <unknown>\nE       #12 0x5641af414cfc <unknown>\nE       #13 0x5641af40b418 <unknown>\nE       #14 0x5641af3d842f <unknown>\nE       #15 0x5641af42f4e8 <unknown>\nE       #16 0x5641af42f6b4 <unknown>\nE       #17 0x5641af440143 <unknown>\nE       #18 0x7f6628494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Go to site: https://dev.freenance.store/","time":{"start":1700003420492,"stop":1700003424114,"duration":3622},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Send newtestuser to User name field","time":{"start":1700003424114,"stop":1700003424194,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Send 123QWEqwe to User password field","time":{"start":1700003424194,"stop":1700003424256,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click 'Forward'","time":{"start":1700003424256,"stop":1700003424301,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click 'Outcome'","time":{"start":1700003424301,"stop":1700003424808,"duration":507},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click 'Постоянные'","time":{"start":1700003425809,"stop":1700003425972,"duration":163},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click 'Добавить категорию'","time":{"start":1700003425972,"stop":1700003426061,"duration":89},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Send YuiIYcGoqv to Название категории field","time":{"start":1700003427062,"stop":1700003427114,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click 'Добавить'","time":{"start":1700003427114,"stop":1700003427164,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click 'Постоянные'","time":{"start":1700003429166,"stop":1700003429209,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Go to site: https://dev.freenance.store/","time":{"start":1700003430518,"stop":1700003430638,"duration":120},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Send newtestuser to User name field","time":{"start":1700003430638,"stop":1700003430699,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Send 123QWEqwe to User password field","time":{"start":1700003430700,"stop":1700003430755,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click 'Forward'","time":{"start":1700003430755,"stop":1700003430790,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click 'Outcome'","time":{"start":1700003430790,"stop":1700003431271,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click 'Постоянные'","time":{"start":1700003432272,"stop":1700003432735,"duration":463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":16,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1700003433825,"stop":1700003435115,"duration":1290},"status":"passed","steps":[],"attachments":[{"uid":"b75ddb9795ebd865","name":"Screenshot <class 'datetime.datetime'>","source":"b75ddb9795ebd865.png","type":"image/png","size":121890},{"uid":"f9346a28493a31b3","name":"Browser Logs","source":"f9346a28493a31b3.txt","type":"text/plain","size":2}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true}],"labels":[{"name":"feature","value":"Operation list"},{"name":"severity","value":"normal"},{"name":"suite","value":"Outcome Page"},{"name":"tag","value":"operation_list"},{"name":"parentSuite","value":"TESTS"},{"name":"subSuite","value":"TestOutcomePage"},{"name":"host","value":"fv-az1535-641"},{"name":"thread","value":"1896-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TESTS.test_outcome_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"value","value":"0.1"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":4,"unknown":0,"total":5},"items":[{"uid":"4b351191098608ec","status":"passed","time":{"start":1699457942368,"stop":1699457960612,"duration":18244}},{"uid":"89a55e01dc2bfcc","status":"passed","time":{"start":1699443742806,"stop":1699443752629,"duration":9823}},{"uid":"14811708850c91be","status":"passed","time":{"start":1699314774874,"stop":1699314784697,"duration":9823}},{"uid":"70e5eba4a8435309","status":"passed","time":{"start":1699284265398,"stop":1699284275971,"duration":10573}}]},"tags":["operation_list"]},"source":"a32c7dfe7a697dee.json","parameterValues":["0.1"]}