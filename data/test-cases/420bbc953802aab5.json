{"uid":"420bbc953802aab5","name":"Shows Added Amount in Operation List (Constant)","fullName":"TESTS.test_income_page.TestIncomePage#test_check_operation_list_constant_income","historyId":"eaf25682937911f77e46b53e8a183b79","time":{"start":1699441441769,"stop":1699441441769,"duration":0},"description":"\n    Attempt to add random amount to exist category in Constant Income list.\n    After user click \"Add\" button on the page, amount shows adds to category.\n    Operation shows in the bottom page section in Operation List.\n\n    Precondition:\n    - User uses valid login and password\n    - Positive amount\n\n    Expected Result:\n    - Amount added to existing category in Constant Income list.\n    - Added amount shows in Operation list.\n    ","descriptionHtml":"<pre><code>Attempt to add random amount to exist category in Constant Income list.\nAfter user click &quot;Add&quot; button on the page, amount shows adds to category.\nOperation shows in the bottom page section in Operation List.\n\nPrecondition:\n- User uses valid login and password\n- Positive amount\n\nExpected Result:\n- Amount added to existing category in Constant Income list.\n- Added amount shows in Operation list.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x564bf07bafb3 <unknown>\n#1 0x564bf048e4a7 <unknown>\n#2 0x564bf04c1c93 <unknown>\n#3 0x564bf04be10c <unknown>\n#4 0x564bf0500ac6 <unknown>\n#5 0x564bf04f7713 <unknown>\n#6 0x564bf04ca18b <unknown>\n#7 0x564bf04caf7e <unknown>\n#8 0x564bf07808d8 <unknown>\n#9 0x564bf0784800 <unknown>\n#10 0x564bf078ecfc <unknown>\n#11 0x564bf0785418 <unknown>\n#12 0x564bf075242f <unknown>\n#13 0x564bf07a94e8 <unknown>\n#14 0x564bf07a96b4 <unknown>\n#15 0x564bf07ba143 <unknown>\n#16 0x7fca0e294ac3 <unknown>","statusTrace":"@pytest.fixture(scope=\"function\")\n    def browser():\n        # driver_path = ChromeDriverManager().install()\n        # service = Service(driver_path)\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument(\"--incognito\")\n        options.add_argument('--disable-blink-features=AutomationControlled')\n        options.add_argument('--user-data-dir=tmp/chrome_profile')\n        options.add_argument(\"--disable-gpu\")\n        options.add_argument(\"--no-sandbox\")\n        options.add_argument(\"--start-maximized\")\n        # driver = webdriver.Chrome(service=service, options=options)\n>       driver = webdriver.Chrome(options=options)\n\nTESTS/conftest.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:208: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:292: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f09ebcf16c0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x564bf07a96b4 \\\\u003Cunknown>\\\\n#15 0x564bf07ba143 \\\\u003Cunknown>\\\\n#16 0x7fca0e294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x564bf07bafb3 <unknown>\nE       #1 0x564bf048e4a7 <unknown>\nE       #2 0x564bf04c1c93 <unknown>\nE       #3 0x564bf04be10c <unknown>\nE       #4 0x564bf0500ac6 <unknown>\nE       #5 0x564bf04f7713 <unknown>\nE       #6 0x564bf04ca18b <unknown>\nE       #7 0x564bf04caf7e <unknown>\nE       #8 0x564bf07808d8 <unknown>\nE       #9 0x564bf0784800 <unknown>\nE       #10 0x564bf078ecfc <unknown>\nE       #11 0x564bf0785418 <unknown>\nE       #12 0x564bf075242f <unknown>\nE       #13 0x564bf07a94e8 <unknown>\nE       #14 0x564bf07a96b4 <unknown>\nE       #15 0x564bf07ba143 <unknown>\nE       #16 0x7fca0e294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1699441441769,"stop":1699441442431,"duration":662},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x564bf07bafb3 <unknown>\n#1 0x564bf048e4a7 <unknown>\n#2 0x564bf04c1c93 <unknown>\n#3 0x564bf04be10c <unknown>\n#4 0x564bf0500ac6 <unknown>\n#5 0x564bf04f7713 <unknown>\n#6 0x564bf04ca18b <unknown>\n#7 0x564bf04caf7e <unknown>\n#8 0x564bf07808d8 <unknown>\n#9 0x564bf0784800 <unknown>\n#10 0x564bf078ecfc <unknown>\n#11 0x564bf0785418 <unknown>\n#12 0x564bf075242f <unknown>\n#13 0x564bf07a94e8 <unknown>\n#14 0x564bf07a96b4 <unknown>\n#15 0x564bf07ba143 <unknown>\n#16 0x7fca0e294ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/FreenanceProject/FreenanceProject/TESTS/conftest.py\", line 32, in browser\n    driver = webdriver.Chrome(options=options)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 208, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 292, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[],"labels":[{"name":"severity","value":"normal"},{"name":"suite","value":"Income Page"},{"name":"feature","value":"Operation list"},{"name":"tag","value":"operation_list"},{"name":"parentSuite","value":"TESTS"},{"name":"subSuite","value":"TestIncomePage"},{"name":"host","value":"fv-az700-995"},{"name":"thread","value":"1914-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TESTS.test_income_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"value","value":"6787.47"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["operation_list"]},"source":"420bbc953802aab5.json","parameterValues":["6787.47"]}