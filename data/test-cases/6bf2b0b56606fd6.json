{"uid":"6bf2b0b56606fd6","name":"Check Recovery Send Email confirm msg","fullName":"TESTS.test_recovery_page.TestRecoveryPage#test_recovery_check_send_mail_msg","historyId":"150ea3d4014c53a296b2865bf8248f29","time":{"start":1700003636348,"stop":1700003646296,"duration":9948},"description":"\n    Check Notification message shows up, when user setup valid Email to Email field\n    and press 'Восстановить' button.\n\n    Params:\n    - Valid email\n\n    Expected Result:\n    - Notification message is shows up, when user setup valid Email to Email field\n    and press 'Восстановить' button.\n    ","descriptionHtml":"<pre><code>Check Notification message shows up, when user setup valid Email to Email field\nand press 'Восстановить' button.\n\nParams:\n- Valid email\n\nExpected Result:\n- Notification message is shows up, when user setup valid Email to Email field\nand press 'Восстановить' button.\n</code></pre>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <TESTS.test_recovery_page.TestRecoveryPage object at 0x7f0e5f3a3610>\nrecovery_page = <PAGES.RecoveryPage.RecoveryPage object at 0x7f0e5f0f7f40>\n\n    @allure.title(\"Check Recovery Send Email confirm msg\")\n    @allure.feature(\"Send Email confirm msg\")\n    @allure.description(\"\"\"\n    Check Notification message shows up, when user setup valid Email to Email field\n    and press 'Восстановить' button.\n    \n    Params:\n    - Valid email\n    \n    Expected Result:\n    - Notification message is shows up, when user setup valid Email to Email field\n    and press 'Восстановить' button.\n    \"\"\")\n    @allure.severity(Severity.NORMAL)\n    @pytest.mark.recovery_page\n    def test_recovery_check_send_mail_msg(self, recovery_page):\n>       recovery_page.recovery_check_send_mail_msg()\n\nTESTS/test_recovery_page.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PAGES.RecoveryPage.RecoveryPage object at 0x7f0e5f0f7f40>\n\n    def recovery_check_send_mail_msg(self):\n        self.start_page_redirect(\"recovery\")\n        self.do_element_send_keys(\"Email field\", self.recovery_email_field, user_email)\n        self.do_click(\"'Forward' button\", self.recovery_forward_btn)\n>       assert self.wait_element(self.recovery_email_send_msg)\nE       AssertionError\n\nPAGES/RecoveryPage.py:41: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1700003635574,"stop":1700003636347,"duration":773},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"recovery_page","time":{"start":1700003636347,"stop":1700003636348,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\n    Check Notification message shows up, when user setup valid Email to Email field\n    and press 'Восстановить' button.\n\n    Params:\n    - Valid email\n\n    Expected Result:\n    - Notification message is shows up, when user setup valid Email to Email field\n    and press 'Восстановить' button.\n    ","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <TESTS.test_recovery_page.TestRecoveryPage object at 0x7f0e5f3a3610>\nrecovery_page = <PAGES.RecoveryPage.RecoveryPage object at 0x7f0e5f0f7f40>\n\n    @allure.title(\"Check Recovery Send Email confirm msg\")\n    @allure.feature(\"Send Email confirm msg\")\n    @allure.description(\"\"\"\n    Check Notification message shows up, when user setup valid Email to Email field\n    and press 'Восстановить' button.\n    \n    Params:\n    - Valid email\n    \n    Expected Result:\n    - Notification message is shows up, when user setup valid Email to Email field\n    and press 'Восстановить' button.\n    \"\"\")\n    @allure.severity(Severity.NORMAL)\n    @pytest.mark.recovery_page\n    def test_recovery_check_send_mail_msg(self, recovery_page):\n>       recovery_page.recovery_check_send_mail_msg()\n\nTESTS/test_recovery_page.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PAGES.RecoveryPage.RecoveryPage object at 0x7f0e5f0f7f40>\n\n    def recovery_check_send_mail_msg(self):\n        self.start_page_redirect(\"recovery\")\n        self.do_element_send_keys(\"Email field\", self.recovery_email_field, user_email)\n        self.do_click(\"'Forward' button\", self.recovery_forward_btn)\n>       assert self.wait_element(self.recovery_email_send_msg)\nE       AssertionError\n\nPAGES/RecoveryPage.py:41: AssertionError","steps":[{"name":"Go to site: https://dev.freenance.store/","time":{"start":1700003636348,"stop":1700003639985,"duration":3637},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click 'password recovery link'","time":{"start":1700003639985,"stop":1700003640040,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Send newtestuser@mail.com to Email field field","time":{"start":1700003640040,"stop":1700003640121,"duration":81},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click ''Forward' button'","time":{"start":1700003640121,"stop":1700003640167,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1700003646300,"stop":1700003647478,"duration":1178},"status":"passed","steps":[],"attachments":[{"uid":"c9204d0a3a712998","name":"Screenshot <class 'datetime.datetime'>","source":"c9204d0a3a712998.png","type":"image/png","size":203585},{"uid":"8031a7292cc20f62","name":"Browser Logs","source":"8031a7292cc20f62.txt","type":"text/plain","size":215}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true}],"labels":[{"name":"feature","value":"Send Email confirm msg"},{"name":"suite","value":"Recovery Page"},{"name":"severity","value":"normal"},{"name":"tag","value":"recovery_page"},{"name":"parentSuite","value":"TESTS"},{"name":"subSuite","value":"TestRecoveryPage"},{"name":"host","value":"fv-az1535-641"},{"name":"thread","value":"1896-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TESTS.test_recovery_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":5},"items":[{"uid":"820cdb43e9e0a76d","status":"passed","time":{"start":1699458170448,"stop":1699458176672,"duration":6224}},{"uid":"ff736e9366a7eeba","status":"passed","time":{"start":1699443881419,"stop":1699443886168,"duration":4749}},{"uid":"1ea0b18371b7aab2","status":"passed","time":{"start":1699314913846,"stop":1699314918855,"duration":5009}},{"uid":"198ddf36b852a913","status":"passed","time":{"start":1699284415210,"stop":1699284420910,"duration":5700}}]},"tags":["recovery_page"]},"source":"6bf2b0b56606fd6.json","parameterValues":[]}